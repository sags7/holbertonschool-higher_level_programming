The ``2-matrix_divided`` module
===============================

using ``matrix_divided``
------------------------

First, import the matrix_divided method from 2-matrix_divided.py
>>> matrix_divided = __import__("2-matrix_divided").matrix_divided


Now, use it:

    Test 01: different sized rows
        >>> matrix_divided([[1,6], [6]], 2) 
        Traceback (most recent call last):
        ...
        TypeError: Each row of the matrix must have the same size

    Test 02: not enough arguments
        >>> matrix_divided([[1,6], [6,5]])
        Traceback (most recent call last):
        ...
        TypeError: matrix_divided() missing 1 required positional argument: 'div'
    
    Test 03: incorrect arguments
        >>> matrix_divided([[1,6], [6,5]], "Cheese")
        Traceback (most recent call last):
        ...
        TypeError: div must be a number

        >>> matrix_divided("Cheese", 2)
        Traceback (most recent call last):
        ...
        TypeError: matrix must be a matrix (list of lists) of integers/floats
        
    Test 04: Too many arguments
        >>> matrix_divided([[1,6], [6,10]], 2, 3)
        Traceback (most recent call last):
        ...
        TypeError: matrix_divided() takes 2 positional arguments but 3 were given

    Test 05: division by zero
        >>> matrix_divided([[1,6], [6,10]], 0)
        Traceback (most recent call last):
        ...
        ZeroDivisionError: division by zero

    Test 06: correct arguments
        >>> matrix_divided([[2,6], [6,10]], 2)
        [[1.0, 3.0], [3.0, 5.0]]