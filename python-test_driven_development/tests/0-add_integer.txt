The ``0-add_integer`` module
==========================

Using ``add_integer``
---------------------

First import add_integer from the 0-add_integer module:
>>> add_integer = __import__("0-add_integer").add_integer

Now use it:

    Test 01: Adding two positive integers
    >>> add_integer(6, 1)
    7

    Test 02: Adding positive and negative integers
    >>> add_integer(6, -1)
    5

    Test 03: Adding two negative integers
    >>> add_integer(-6, -1)
    -7

    Test 04: Adding integers and floats
    >>> add_integer(6.9, 1)
    7

    Test 05: Adding two  floats
    >>> add_integer(6.5, 1.5)
    7

    Test 06: Handling incorrect type for first argument
    >>> add_integer("Cheese", 1)
    Traceback (most recent call last):
    ...
    TypeError: a must be an integer
    
    >>> add_integer(None, 1)
    Traceback (most recent call last):
    ...
    TypeError: a must be an integer
    
    >>> add_integer((1,1), 1)
    Traceback (most recent call last):
    ...
    TypeError: a must be an integer
    
    Test 07: Handling incorrect type for second argument
    >>> add_integer(1, "Cheese")
    Traceback (most recent call last):
    ...
    TypeError: b must be an integer

    >>> add_integer(1, None)
    Traceback (most recent call last):
    ...
    TypeError: b must be an integer
    
    >>> add_integer(1, (1,1))
    Traceback (most recent call last):
    ...
    TypeError: b must be an integer

    Test 08: Handling float overflow
    >>> add_integer(float('inf'), 5)
    Traceback (most recent call last):
      ...
    OverflowError: cannot convert float infinity to integer

    Test 09: Handling NaN
    >>> add_integer(1, float('NaN'))
    Traceback (most recent call last):
    ...
    ValueError: cannot convert float NaN to integer

